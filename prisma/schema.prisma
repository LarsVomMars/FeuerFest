datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model User {
    id        Int       @id @default(autoincrement())
    email     String    @unique
    name      String
    username  String    @unique
    password  String    @default("")
    role      Role      @default(USER)
    status    Status    @default(PENDING)
    createdAt DateTime  @default(now())
    updatedAt DateTime? @updatedAt

    dummy Boolean @default(false) // Pending user without an account

    UserSession UserSession[]
    Event       Event[]
    EventStaff  EventStaff[]
    Order       Order[]
}

// token insted of id?
model UserSession {
    id        Int      @id @default(autoincrement())
    user      User     @relation(fields: [userId], references: [id])
    token     String   @unique
    createdAt DateTime @default(now())
    expiresAt DateTime

    userId Int
}

model Event {
    slug        String   @unique
    name        String
    description String
    location    String
    start       DateTime
    end         DateTime

    createdAt   DateTime  @default(now())
    createdBy   User      @relation(fields: [createdById], references: [id])
    updatedAt   DateTime? @updatedAt
    createdById Int

    EventStaff EventStaff[]
    Product    Product[]
    Order      Order[]
}

model EventStaff {
    id        Int       @id @default(autoincrement())
    event     Event     @relation(fields: [slug], references: [slug])
    user      User      @relation(fields: [userId], references: [id])
    role      Role      @default(USER)
    createdAt DateTime  @default(now())
    updatedAt DateTime? @updatedAt

    slug   String
    userId Int
}

model Product {
    id          Int         @id @default(autoincrement())
    name        String
    description String
    price       Decimal     @db.Decimal(10, 2)
    event       Event       @relation(fields: [slug], references: [slug])
    type        ProductTyoe @default(FOOD)

    createdAt DateTime  @default(now())
    updatedAt DateTime? @updatedAt

    slug      String
    OrderItem OrderItem[]
}

model Order {
    id        Int      @id @default(autoincrement())
    user      User     @relation(fields: [userId], references: [id])
    event     Event    @relation(fields: [slug], references: [slug])
    createdAt DateTime @default(now())

    slug      String
    userId    Int
    OrderItem OrderItem[]
}

model OrderItem {
    id        Int      @id @default(autoincrement())
    order     Order    @relation(fields: [orderId], references: [id])
    product   Product? @relation(fields: [productId], references: [id])
    quantity  Int
    total     Decimal  @db.Decimal(10, 2)
    voucher   Boolean  @default(false)
    createdAt DateTime @default(now())

    orderId   Int
    productId Int?
}

enum Role {
    USER
    ADMIN
    OWNER
}

enum Status {
    PENDING
    ACTIVE
    INACTIVE
}

enum ProductTyoe {
    FOOD
    DRINK
    BAR
}
